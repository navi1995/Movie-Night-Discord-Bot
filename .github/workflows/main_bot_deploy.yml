name: Deploy to Google Compute Engine

on:
  push:
    branches:
      - master

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          diff-search: true
          file-name: 'Discord Bot/package.json'

      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
      
      - name: Log when unchanged
        if: steps.check.outputs.changed == 'false'
        run: 'echo "No version change :/"'

  deploy:
    needs: check-version
    runs-on: ubuntu-latest

    steps:
      - name: announce
        run: 'echo "${{ needs.check-version.outputs.changed }}"'
    # if: ${{ needs.check_version.outputs.changed == 'true' }}
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v3

    #   - id: 'auth'
    #     uses: 'google-github-actions/auth@v1'
    #     with:
    #       credentials_json: '${{ secrets.GCP_SA_KEY }}'

    #   - name: Set up Google Cloud SDK
    #     uses: google-github-actions/setup-gcloud@v1
    #     with:
    #       project_id: ${{ secrets.GCP_PROJECT_ID }}

    #   - name: Configure Google Cloud SDK
    #     run: |
    #       echo "${{ secrets.GCP_SA_KEY }}" > credentials.json
    #       gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
    #       gcloud config set compute/zone ${{ secrets.GCP_COMPUTE_ZONE }}

    #   - name: SSH to Compute Engine instance
    #     uses: appleboy/ssh-action@master
    #     with:
    #       host: ${{ secrets.GCP_INSTANCE_IP }}
    #       username: ${{ secrets.GCP_INSTANCE_USERNAME }}
    #       key: ${{ secrets.GCP_SSH_KEY }}

    #       # Commands to execute on the instance
    #       script: |
    #         cd Movie-Night-Discord-Bot/Discord\ Bot/
    #         git pull origin master --rebase --autostash
    #         npm install --production
    #         pm2 restart index.js
