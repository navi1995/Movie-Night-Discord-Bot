name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Create Web .env file
        run: |
          mkdir -p "/Movie-Night-Bot-Website/bot-dashboard/" && touch "/Movie-Night-Bot-Website/bot-dashboard/.env"
          echo REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }} >> /Movie-Night-Bot-Website/bot-dashboard/.env
          echo REACT_APP_BASE_API_URL=${{ secrets.REACT_APP_BASE_API_URL }} >> /Movie-Night-Bot-Website/bot-dashboard/.env
          echo REACT_APP_API_FULLURL=${{ secrets.REACT_APP_API_FULLURL }} >> /Movie-Night-Bot-Website/bot-dashboard/.env
      - name: Create Backend .env file
        run: |
          mkdir -p "/Movie-Night-Bot-Website/backend/" && touch "/Movie-Night-Bot-Website/backend/.env"
          echo PORT=${{ secrets.PORT }} >> /Movie-Night-Bot-Website/backend/.env
          echo DASHBOARD_CLIENT_ID=${{ secrets.DASHBOARD_CLIENT_ID }} >> /Movie-Night-Bot-Website/backend/.env
          echo DASHBOARD_CLIENT_SECRET=${{ secrets.DASHBOARD_CLIENT_SECRET }} >> /Movie-Night-Bot-Website/backend/.env
          echo DASHBOARD_CALLBACK_URL=${{ secrets.DASHBOARD_CALLBACK_URL }} >> /Movie-Night-Bot-Website/backend/.env
          echo MONGO_LOGIN=${{ secrets.MONGO_LOGIN }} >> /Movie-Night-Bot-Website/backend/.env
          echo TOP_API=${{ secrets.TOP_API }} >> /Movie-Night-Bot-Website/backend/.env
          echo SESSION_SECRET=${{ secrets.SESSION_SECRET }} >> /Movie-Night-Bot-Website/backend/.env
          echo BASE_URL=${{ secrets.BASE_URL }} >> /Movie-Night-Bot-Website/backend/.env
          echo WEB_FOLDER=${{ secrets.WEB_FOLDER }} >> /Movie-Night-Bot-Website/backend/.env
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_JOLLY_ROCK_0315EE91E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_build_command: "CI=false npm run build"
          app_location: "/Movie-Night-Bot-Website/bot-dashboard" # App source code path
          api_build_command: "npm run deploy"
          api_location: "/Movie-Night-Bot-Website/backend" # Api source code path - optional
          output_location: "build" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_JOLLY_ROCK_0315EE91E }}
          action: "close"
